<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
                     http://www.springframework.org/schema/beans/spring-beans.xsd
                     http://www.springframework.org/schema/security 
                     http://www.springframework.org/schema/security/spring-security.xsd">
      <security:global-method-security pre-post-annotations="enabled"/>
	<!-- <security:http  use-expressions="true" >
		<security:csrf disabled="true" />
		<security:intercept-url pattern="/login" access="permitAll()"/>
		<security:intercept-url pattern="/**" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')" />
		<security:form-login login-page="/login"  />
		<security:logout logout-url="/logout" logout-success-url="/login"/>
	</security:http> -->
	
	<!-- Declare an authentication-manager to use a custom userDetailsService -->
	<security:authentication-manager>
		<security:authentication-provider
			user-service-ref="currentUserService">
			<security:password-encoder ref="bcryptPasswordEncoder" />
		</security:authentication-provider>
	</security:authentication-manager>

	<!-- 비밀번호 암호화 -->
	<bean id="bcryptPasswordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />

	<!-- Spring Security에서 사용하는 유저를 확인하는 Service (내부에 DAO를 사용하여 로그인 여부를 판단함 -->
<!-- 	<bean id="customService" class="com.shin.security.service.tomServiceCus" />
 -->
 	<!-- <bean id="currentUserService" class="com.shinseokki.puzzle.service.CurrentUserService" /> -->

</beans>